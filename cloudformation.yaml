AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Deploy Client API Lambda using Cloudformation.
Resources:
  ClientApi:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/client-lambda.jar
      Handler: 'at.madlmayr.ReadConfig::handleRequest'
      Runtime: java8
      Description: "Client API Lambda"
      MemorySize: 512
      Timeout: 15
      Role: !GetAtt LambdaExecutionRole.Arn
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: FirehoseFullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                  - firehose:*
                  - xray:*
                  - dynamodb:*
                Resource: "*"
  RateRuleDaily:
    Type: AWS::Events::Rule
    Properties:
      Description: "Run Event every Minute"
      Name: "RateRuleDaily"
      ScheduleExpression: rate(1 minutes)
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt
            - ClientApi
            - Arn
          Id: RateRuleDailyScheduler
          # Input: "Input"
          #RoleArn: !GetAtt
          #  - EventsInvokeKinesisTargetRole
          #  - Arn
  InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt ClientApi.Arn
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt RateRuleDaily.Arn
  DynamoDBConfigTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "Company"
          AttributeType: "S"
        - AttributeName: "Tool"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Company"
          KeyType: "HASH"
        - AttributeName: "Tool"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: "Config"
  DynamoDBRawDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "CompanyTool"
          AttributeType: "S"
        - AttributeName: "Timestamp"
          AttributeType: "N"
      KeySchema:
        - AttributeName: "CompanyTool"
          KeyType: "HASH"
        - AttributeName: "Timestamp"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: "RawData"
Outputs:
  TableName:
    Value: !Ref 'DynamoDBConfigTable'
    Description: Table name of the newly created DynamoDB table for Configs